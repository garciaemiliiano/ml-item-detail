// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependencies

import (
	"github.com/google/wire"
	"go.uber.org/zap"
	"gorm.io/gorm"
	"item-detail-api/config"
	items4 "item-detail-api/src/core/providers/items"
	items2 "item-detail-api/src/core/usecases/items"
	"item-detail-api/src/entrypoints"
	items3 "item-detail-api/src/entrypoints/rest/items"
	"item-detail-api/src/entrypoints/rest/ping"
	"item-detail-api/src/repositories/items"
)

// Injectors from wire.go:

func BuildWeb(conf *config.Config, logger *zap.Logger, db *gorm.DB) *WebHandlerContainer {
	itemRepository := items.NewItemRepository(db, logger)
	getItemImpl := items2.NewGetItemImpl(logger, itemRepository)
	getItemHandler := items3.NewWireGetItemHandler(logger, getItemImpl)
	itemContainer := entrypoints.NewItemContainer(getItemHandler)
	pingHandler := ping.NewWirePingHandler(logger)
	pingContainer := entrypoints.NewPingContainer(pingHandler)
	webHandlerContainer := &WebHandlerContainer{
		ItemContainer: itemContainer,
		PingContainer: pingContainer,
	}
	return webHandlerContainer
}

// wire.go:

var containersSet = wire.NewSet(entrypoints.NewItemContainer, entrypoints.NewPingContainer)

var handlersSet = wire.NewSet(items3.NewWireGetItemHandler, ping.NewWirePingHandler)

var usecasesSet = wire.NewSet(items2.NewGetItemImpl)

var repositoriesSet = wire.NewSet(items.NewItemRepository, wire.Bind(new(items4.ItemsPersistor), new(*items.ItemRepository)))
